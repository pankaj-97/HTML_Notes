linear grandient to display different colors together changing from one point to another.
Syntax-->background: linear-gradient(gradient_direction, color 1, color 2, color 3, ...);
background:linear-gradient(45deg,red,black);
 background:linear-gradient(35deg,   #CCFFFF,#FFCCCC);
 
 repeating linear gradient-->
The repeating-linear-gradient() function is very similar to linear-gradient() with the major difference that it repeats the specified gradient pattern.
The angle value is the direction of the gradient. Color stops are like width values that mark where a transition takes place,
and are given with a percentage or a number of pixels.
ex-->
background: repeating-linear-gradient(
      90deg,
      yellow 0px,
      blue 40px,
      green 40px,
      red 80px
    );
    here blue and green will not show much of a gradient as they are having the same end value or width.
 
 
 
 
 One way to add texture and interest to a background and have it stand out more is to add a subtle pattern. 
 The key is balance, as you don't want the background to stand out too much, and take away from the foreground. 
 The background property supports the url() function in order to link to an image of the chosen texture or pattern. 
 The link address is wrapped in quotes inside the parentheses.
 
 
 
 scale Property-->
 To change the scale of an element, CSS has the transform property, along with its scale() function.
 The following code example doubles the size of all the paragraph elements on the page:

p {
  transform: scale(2);
}
 
 skew is a slant in the element.skewx is slant w.r.t x-axis and skewy w.r.t to y.
 The next function of the transform property is skewX(), which skews the selected element along its X (horizontal) axis by a given degree.
The following code skews the paragraph element by -32 degrees along the X-axis.

p {
  transform: skewX(-32deg);
}
 
 Given that the skewX() function skews the selected element along the X-axis by a given degree, 
 it is no surprise that the skewY() property skews an element along the Y (vertical) axis.

transform also has a rotate property -->
 transform:rotate(-45deg) ;
  

 
 ::before and ::after pseudo-elements. These pseudo-elements are used to add something before or after a selected elemenFor the ::before and ::after pseudo-elements to function properly, 
they must have a defined content property. 
This property is usually used to add things like a photo or text to the selected element. 
When the ::before and ::after pseudo-elements are used to make shapes, the content property is still required, but it's set to an empty stringt. 
 For the ::before and ::after pseudo-elements to function properly, they must have a defined content property. 
 This property is usually used to add things like a photo or text to the selected element. 
 When the ::before and ::after pseudo-elements are used to make shapes, the content property is still required, but it's set to an empty string
 
 
